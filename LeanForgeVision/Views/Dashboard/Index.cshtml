
@{
    ViewBag.Title = "LeanForge Vision";
    ViewBag.pTitle = "Dashboard";
    ViewBag.xData = "dashboard";
    ViewBag.ActiveItem = "default";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Start All Card -->
<div class="flex flex-col gap-4 min-h-[calc(100vh-212px)]">


    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-4">
        <div class="flex items-center justify-between gap-6 p-5 bg-white border rounded dark:bg-darklight dark:border-darkborder border-black/10">
            <div>
                <span id="percentageTotalOrdersPlannedYesterdayAndToday" class="p-1 text-sm leading-none rounded-md bg-info/20 text-info">Loading...</span>
                <p class="text-base dark:text-white/80">Daily Planned</p>
                <div>
                    <h4 id="totalOrdersPlanned" class="text-2xl font-semibold text-black dark:text-white">
                        Loading...
                    </h4>
                </div>

                <p class="text-muted">Today</p>
            </div>

            <div>
                <div id="chartTotalOrdersPlannedWeekly" dir="ltr"></div>
            </div>
        </div>
        <div class="flex items-center justify-between gap-6 p-5 bg-white border rounded dark:bg-darklight dark:border-darkborder border-black/10">
            <div>
                <span id="percentageTotalToySortedYesterdayAndToday" class="p-1 text-sm leading-none rounded-md bg-info/20 text-info">Loading...</span>
                <p class="text-base dark:text-white/80">Processed</p>
                <div>
                    <h4 id="totalOrdersProcessed" class="text-2xl font-semibold text-black dark:text-white">
                        Loading...
                    </h4>

                </div>
                <p class="text-muted">Sorted</p>
            </div>
            <div>
                <div id="chartTotalSortedWeekly" dir="ltr"></div>
            </div>
        </div>
        <div class="flex items-center justify-between gap-6 p-5 bg-white border rounded dark:bg-darklight dark:border-darkborder border-black/10">
            <div>
                <span id="percentageTotalToyPendingYesterdayAndToday" class="p-1 text-sm leading-none rounded-md bg-info/20 text-info">Loading...</span>
                <p class="text-base dark:text-white/80">Pending</p>
                <div>
                    <h4 id="totalOrdersPending" class="text-2xl font-semibold text-black dark:text-white">
                        Loading...
                    </h4>

                </div>

                <p class="text-muted">Unsorted</p>
            </div>
            <div>
                <div id="totalOrdersPendingChart" dir="ltr"></div>
            </div>
        </div>
        <div class="flex items-center justify-between gap-6 p-5 bg-white border rounded dark:bg-darklight dark:border-darkborder border-black/10">
            <div>
                <span id="percentageTotalIssuesYesterdayAndToday" class="p-1 text-sm leading-none rounded-md bg-success/20 text-success">%</span>
                <p class="text-base dark:text-white/80">Issues</p>
               
                <h4 id="totalIssuesToday" class="text-2xl font-semibold text-black dark:text-white">
                    Loading...
                </h4>
                <p class="text-muted">Today</p>
            </div>
            <div>
                <div id="chartTotalProblemWeekly" dir="ltr"></div>
            </div>
        </div>
    </div>

    <!--------------------------------------------------------------------------------- Chart Location Percentage   ------------------------------------------------------------------------------------------------>
    <div id="chartContainerProgress" class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3">
        <!-- Chart containers will be dynamically inserted here -->
    </div>


</div>
<!-- End All Card -->


<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@section scripts{

    <script src="~/assets/libs/apexcharts/apexcharts.min.js"></script>
    <script src="~/assets/js/pages/appexchart-app.js"></script>
    <script src="~/assets/js/main.js"></script>


    <script>
        var fetchpercentageTotalToyPendingYesterdayAndTodayUrl = '@Url.Action("GetYesterdayAndTodayPlanAndSortedTotals", "Shipping")';
        var fetchSortedAndRemainingForChart = '@Url.Action("GetDailyPlanGateJson", "Gate")';
        var fetchTotalPendingWeeklyChart = '@Url.Action("GetWeeklyPlannedSortedPending", "Shipping")';
      
        $(document).ready(function () {
            updatePercentageTotalToyPendingYesterdayAndToday();
            fetchChartData();
            fetchWeeklyTotalWeeklyPendingChart();

        });

        function refreshData() {
            updatePercentageTotalToyPendingYesterdayAndToday();
            fetchChartData();
            fetchWeeklyTotalWeeklyPendingChart();
        }


        function fetchChartData() {
            $.ajax({
                url: fetchSortedAndRemainingForChart,  
                type: 'GET',                         
                dataType: 'json',                    
                success: function (data) {
                    if (data && data.length > 0) {
                        // Data berhasil diterima, lanjutkan dengan chart dan pembaruan lainnya
                        console.log(data);
                        generateDonutChartsFromData(data);
                        updateAllOrderStats(data);
                       
                    } else {
                        console.error("Data kosong atau tidak valid!");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Terjadi kesalahan saat mengambil data:", error);
                }
            });
        }

        function getTotalPlannedData(data) {
            return data.map(item => item.TotalPlanned);  // Ambil TotalPlanned dari setiap item
        }

        // Fungsi untuk memperbarui statistik berdasarkan data yang diterima
        function updateAllOrderStats(data) {
            data.forEach(order => {
                const id = `order-stats-${order.Gate_ID}`;  // ID untuk setiap order
                const total = order.TotalPlanned;
                const percentage = order.TotalPlanned > 0 ? (order.TotalSorted / order.TotalPlanned) * 100 : 0;
                updateOrderStats(id, total, percentage.toFixed(1));  // Menampilkan persentase dengan 1 desimal
            });
        }

        // Fungsi untuk memperbarui order stats
        function updateOrderStats(id, total, percentage) {
            const element = document.getElementById(id);
            if (element) {
                element.innerHTML = `
                ${total}
                <span class="p-1 text-sm leading-none rounded-md ${percentage >= 20 ? "bg-success/20 text-success" : "bg-danger/20 text-danger"}">
                    ${percentage}%
                </span>
            `;
            }
        }

        // Fungsi untuk menghasilkan grafik donut berdasarkan data
        function generateDonutChartsFromData(data) {
            const chartContainer = document.getElementById("chartContainerProgress");
            if (!chartContainer) {
                console.error("Elemen chartContainerProgress tidak ditemukan!");
                return;
            }

            chartContainer.innerHTML = "";  // Kosongkan kontainer chart

            data.forEach(item => {
                const chartWrapper = document.createElement("div");
                chartWrapper.className = "flex flex-col items-center justify-between gap-4 p-4 bg-white border rounded dark:bg-darklight dark:border-darkborder border-black/10";
                chartWrapper.style.height = "450px";

                const chartTitle = document.createElement("h2");
                chartTitle.className = "text-base font-semibold text-black capitalize dark:text-white/80";
                chartTitle.innerText = `${item.Gate_Name}`;

                const chartElement = document.createElement("div");
                chartElement.id = `chart-${item.Gate_ID}`;
                chartElement.className = "w-full";
                chartElement.style.height = "300px";
                chartElement.setAttribute("dir", "ltr");

                chartWrapper.appendChild(chartTitle);
                chartWrapper.appendChild(chartElement);
                chartContainer.appendChild(chartWrapper);
            });

            setTimeout(() => {
                data.forEach(item => {
                    const chartElement = document.getElementById(`chart-${item.Gate_ID}`);
                    if (chartElement) {
                        new ApexCharts(chartElement, createChartOptions(item.TotalPlanned, item.TotalSorted, ['#228B22', '#e60000'])).render();
                    } else {
                        console.error(`Chart element tidak ditemukan: chart-${item.Gate_ID}`);
                    }
                });
            }, 100);
        }

        // Fungsi untuk membuat opsi grafik donut
        function createChartOptions(total, sorted, colors) {
            return {
                chart: {
                    type: 'donut',
                    height: 300
                },
                labels: ['Loaded', 'Remaining'],
                series: [sorted, total - sorted],
                colors: colors,
                legend: { position: 'bottom' },
                dataLabels: { enabled: false },
                plotOptions: {
                    pie: {
                        donut: { size: '70%' }
                    }
                }
            };
        }
        function updatePercentageTotalToyPendingYesterdayAndToday() {
            $.ajax({
                url: fetchpercentageTotalToyPendingYesterdayAndTodayUrl,
                type: 'GET',
                success: function (response) {
                    var percentage = Math.floor(response.comparison.pendingPercentageChange);
                    var status = response.comparison.pendingStatus;

                    var span = $('#percentageTotalToyPendingYesterdayAndToday');

                    // Update text
                    span.text(percentage + "%");

                    // Reset semua class style dulu
                    span.removeClass('text-success text-danger bg-success/20 bg-danger/20 font-bold text-info bg-info/20');

                    // Tambah class sesuai status
                    if (status.toLowerCase() === "increase") {
                        span.addClass('text-success bg-success/20 font-bold');
                    } else if (status.toLowerCase() === "decrease") {
                        span.addClass('text-danger bg-danger/20 font-bold');
                    } else {
                        // Default style kalau status aneh
                        span.addClass('text-info bg-info/20');
                    }
                },
                error: function () {
                    console.error('Gagal mengambil data pending percentage');
                }
            });
        }



        function updateOrderStats(id, total, percentage) {
            const element = document.getElementById(id);
            if (element) {
                element.innerHTML = `
            ${total}
            <span class="p-1 text-sm leading-none rounded-md ${percentage >= 20 ? "bg-success/20 text-success" : "bg-danger/20 text-danger"}">
                ${percentage}%
            </span>
        `;
            }
        }

        function fetchWeeklyTotalWeeklyPendingChart() {
            $.ajax({
                url: fetchTotalPendingWeeklyChart,
                method: "GET",
                success: function (data) {
                    // Fungsi untuk mengonversi format tanggal /Date(1746378000000)/ menjadi objek Date
                    function convertDateFormat(dateString) {
                        // Mengambil angka millisecond dari format /Date(1746378000000)/ dan mengonversinya menjadi Date
                        var timestamp = parseInt(dateString.replace("/Date(", "").replace(")/", ""), 10);
                        return new Date(timestamp);
                    }

                    // Urutkan berdasarkan tanggal
                    data.sort((a, b) => convertDateFormat(a.PlanDate) - convertDateFormat(b.PlanDate));

                    // Ambil nilai planned dan label tanggal
                    var seriesData = data.map(item => item.TotalPending);
                    var categories = data.map(item => {
                        let rawDate = item.PlanDate;
                        let date = convertDateFormat(rawDate); // Menggunakan fungsi konversi
                        return date.toLocaleDateString("en-GB", {
                            day: '2-digit',
                            month: 'short'
                        }); // contoh: 11 May
                    });

                    // Ambil 2 terakhir: hari ini dan kemarin
                    var today = seriesData[seriesData.length - 1] ?? 0;
                    var yesterday = seriesData[seriesData.length - 2] ?? 0;

                    // Warna garis: hijau jika naik, merah jika turun
                    var chartColor = today <= yesterday ? "#50cd89" : "#f1416c";

                    var options = {
                        series: [{
                            data: seriesData,
                        }],
                        chart: {
                            height: 60,
                            type: "line",
                            fontFamily: "Nunito, sans-serif",
                            sparkline: {
                                enabled: true,
                            },
                            dropShadow: {
                                enabled: false,
                            },
                        },
                        stroke: {
                            curve: "smooth",
                            width: 2,
                        },
                        colors: [chartColor],
                        grid: {
                            padding: {
                                top: 5,
                                bottom: 5,
                                left: 5,
                                right: 5,
                            },
                        },
                        tooltip: {
                            x: {
                                formatter: function (val, opts) {
                                    return categories[opts.dataPointIndex]; // tampilkan tanggal
                                }
                            },
                            y: {
                                title: {
                                    formatter: () => "Total Pending"
                                }
                            }
                        },
                        xaxis: {
                            categories: categories // walaupun sparkline, tetap aman disediakan
                        }
                    };

                    // Render ke elemen chart
                    var chart = new ApexCharts(document.querySelector("#totalOrdersPendingChart"), options);
                    chart.render();
                },
                error: function (xhr, status, error) {
                    console.error("Failed to load chart data:", error);
                }
            });
        }






    </script>

}
